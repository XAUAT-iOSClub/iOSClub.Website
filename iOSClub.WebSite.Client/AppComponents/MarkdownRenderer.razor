@inject IJSRuntime JSRuntime

<div style="width: 90%" @ref="markdownContainer"></div>


@code {
    private ElementReference markdownContainer;

    [Parameter] public string html { get; set; } = "";

    protected override void OnParametersSet()
    {
        if (string.IsNullOrEmpty(html)) return;
        JSRuntime.InvokeVoidAsync("insertHtml", markdownContainer, html);
    }

}

<script>
    window.insertHtml = function (element, html) {
        const md = markdownit({
            html: true,
            linkify: true,
            typographer: true
        })
        
        md.use(markdownitContainer, 'warning', {
            validate: function (params) {
                return params.trim().match(/^warning\s+(.*)$/);
            },
            render: function (tokens, idx) {
                const m = tokens[idx].info.trim().match(/^warning\s+(.*)$/);
                if (tokens[idx].nesting === 1) {
                    return `<div class="warning custom-block"><p style="font-weight: bold">${md.utils.escapeHtml(m[1])}</p>\n`;
                } else {
                    return '</div>\n';
                }
            }
        })

        md.use(markdownitContainer, 'danger', {
            validate: function (params) {
                return params.trim().match(/^danger\s+(.*)$/);
            },
            render: function (tokens, idx) {
                const m = tokens[idx].info.trim().match(/^danger\s+(.*)$/);
                if (tokens[idx].nesting === 1) {
                    return `<div class="danger custom-block"><p style="font-weight: bold">${md.utils.escapeHtml(m[1])}</p>\n`;
                } else {
                    return '</div>\n';
                }
            }
        })

        element.innerHTML = md.render(html);
        Prism.highlightAll(); // 如果使用 Prism.js
    }

</script>

<script src="https://cdn.jsdelivr.net/npm/markdown-it@14.1.0/dist/markdown-it.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/markdown-it-container@4.0.0/dist/markdown-it-container.min.js"></script>


<style>
    .img-fluid {
        max-width: 80%;
    }

    table {
        margin: .5rem 0;
        border-spacing: 0;
        border-radius: 5px;
        border: 1px solid #e0e0e0;
        min-width: 70%;
        display: table;
        border-collapse: separate;
        box-sizing: border-box;
        text-indent: initial;
        unicode-bidi: isolate;
    }

    th {
        padding: .75rem;
        border-bottom: 2px solid #9e9e9e;
        color: #757575;
        background-color: #f5f5f5;
    }

    td {
        border-bottom: 1px solid #e0e0e0;
        border-right: 1px solid #f5f5f5;
        padding: .75rem;
    }

    .danger {
        border-color: transparent;
        color: rgba(60, 60, 67);
        background-color: rgba(244, 63, 94, .14);
    }

    .custom-block {
        border: 1px solid transparent;
        border-radius: 8px;
        padding: 16px 16px 8px;
        line-height: 24px;
        font-size: 14px;
        color: rgba(60, 60, 67, .78);
        margin-bottom: 10px;
    }
</style>