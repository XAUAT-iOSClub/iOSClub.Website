@page "/Articles"
@using iOSClub.Data
@using iOSClub.Data.DataModels
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<iOSContext> DbFactory

<PageTitle>社团文章 - 西建大iOS Club</PageTitle>

<meta name="referrer" content="never">

<div style="text-align: center;">
    <Image Preview="false" Src="/Centre/Article.jpg"/>
    <Flex Align="center" Justify="center">
        <div class="gradient-text">iOS Club 技术博客</div>
    </Flex>
    <Paragraph Style="font-size: 22px" Strong Type="secondary">记录每一个思维的并发点</Paragraph>
</div>

<GridRow Gutter="16" Style="padding: 10px">
    @foreach (var context in Models)
    {
        <GridCol Xs="24" Sm="24" Md="24" Lg="12" Xl="12" Xxl="12">
            <a href="@context.Link" target="_blank">
                <Card Hoverable Class="div" Bordered="false">
                    <Flex Vertical Style="height: 100%" Justify="center">
                        <Title Level="3">
                            @context.Title
                        </Title>
                        <Flex Justify="space-between" Align="center" Gap="small">
                            <img alt=""
                                 src="@context.Cover"
                                 style="width:50%;" class="desktop-phone"/>
                            <Paragraph Type="secondary">@context.Digest</Paragraph>
                        </Flex>
                    </Flex>
                </Card>
            </a>
        </GridCol>
    }
</GridRow>

<div style="padding: 30px">
    <Title>更多文章</Title>

    <AntList Bordered="false" DataSource="@Entries">
        <ListItem Style="border: none">
            <a href="@context.Link[0].Href" target="_blank" class="a-btn">@($"{context.Title}")</a>
        </ListItem>
    </AntList>
</div>

@code {

    private ArticleModel[] Models { get; set; } = [];
    private List<Entry> Entries { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        await using var context = await DbFactory.CreateDbContextAsync();
        Models = await context.Articles.ToArrayAsync();
        Entries = await WebArticle.GetArticleAsync();
        await base.OnInitializedAsync();
    }

}

<style>
    .div{
        margin: 10px;
        height: 270px;
        max-width: 100%;
        background: #f3f5f7;
        border-radius: 10px;
    }

    .a-btn {
        display: inline-block;
        transition: .2s;
        cursor: pointer;
        margin: 5px 5px 0 0;
        border-radius: 10px;
        padding: 5px;
        border: none;
        font-size: 18px;
        color: #1c1f23;
    }

    .a-btn:hover {
        background-color: #f3f5f7;
        color: #1c1f23;
        transform: scale(1.02);
    }
</style>